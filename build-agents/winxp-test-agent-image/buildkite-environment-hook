#!/bin/bash

# The `environment` hook will run before all other commands, and can be used
# to set up secrets, data, etc. Anything exported in hooks will be available
# to the build script.
#
# For example:
#
# export SECRET_VAR=token

# Note that as the script is sourced not run directly, the shebang line will be ignored
# See https://buildkite.com/docs/agent/v3/hooks#creating-hook-scripts

set -e

TEST_MACHINE_NAME=rx100.build.solemnwarning.net

sudo win-boot /srv/iscsi/winxp-base.img

# Turns the test machine back off in pre-exit hook.
touch ~/.test-machine-powered-on

# Maximum number of seconds to wait for Windows VM to boot.
MAX_BOOT_WAIT=300

echo "Waiting for Windows to boot..."

remaining_secs=$MAX_BOOT_WAIT
while true
do
	if ssh -o ConnectTimeout=1 "Administrator@${TEST_MACHINE_NAME}" ';' > /dev/null 2>&1
	then
		break
	fi
	
	remaining_secs=$(expr "$remaining_secs" - 1)
	if [ "$remaining_secs" -le 0 ]
	then
		echo "Windows didn't boot after $MAX_BOOT_WAIT seconds" 1>&2
		exit 1
	fi
	
	sleep 1
done

rel_checkout_path="${BUILDKITE_BUILD_CHECKOUT_PATH#$BUILDKITE_BUILD_PATH}"
smb_checkout_path="\\\\172.24.136.2\\builds$(tr '/' '\\' <<< "$rel_checkout_path")"

# The checkout directory needs to exist for NET USE to be able to map it...
mkdir -p "$BUILDKITE_BUILD_CHECKOUT_PATH"

echo "Mapping drive X: to $smb_checkout_path..."
ssh "Administrator@${TEST_MACHINE_NAME}" "NET USE X: $smb_checkout_path"

# ...but it needs to be deleted for the checkout process, the mapping in
# Windows will survive through to when the directory is re-mkdir'd now.
rm -rf "$BUILDKITE_BUILD_CHECKOUT_PATH"
